// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: stoupento_mesurement.proto

#include "stoupento_mesurement.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_vector3d_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_vector3d_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vector3d;
}  // namespace protobuf_vector3d_2eproto
namespace stoupentoPlugin_msgs {
namespace msgs {
class StoupentoMesurementDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StoupentoMesurement>
      _instance;
} _StoupentoMesurement_default_instance_;
}  // namespace msgs
}  // namespace stoupentoPlugin_msgs
namespace protobuf_stoupento_5fmesurement_2eproto {
static void InitDefaultsStoupentoMesurement() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::stoupentoPlugin_msgs::msgs::_StoupentoMesurement_default_instance_;
    new (ptr) ::stoupentoPlugin_msgs::msgs::StoupentoMesurement();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::stoupentoPlugin_msgs::msgs::StoupentoMesurement::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StoupentoMesurement =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStoupentoMesurement}, {
      &protobuf_vector3d_2eproto::scc_info_Vector3d.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_StoupentoMesurement.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stoupentoPlugin_msgs::msgs::StoupentoMesurement, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stoupentoPlugin_msgs::msgs::StoupentoMesurement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stoupentoPlugin_msgs::msgs::StoupentoMesurement, left_wheel_vel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stoupentoPlugin_msgs::msgs::StoupentoMesurement, left_joint1_vel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stoupentoPlugin_msgs::msgs::StoupentoMesurement, left_joint2_vel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stoupentoPlugin_msgs::msgs::StoupentoMesurement, left_joint3_vel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stoupentoPlugin_msgs::msgs::StoupentoMesurement, left_joint4_vel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stoupentoPlugin_msgs::msgs::StoupentoMesurement, left_wheel_ang_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stoupentoPlugin_msgs::msgs::StoupentoMesurement, left_joint1_ang_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stoupentoPlugin_msgs::msgs::StoupentoMesurement, left_joint2_ang_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stoupentoPlugin_msgs::msgs::StoupentoMesurement, left_joint3_ang_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stoupentoPlugin_msgs::msgs::StoupentoMesurement, left_joint4_ang_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stoupentoPlugin_msgs::msgs::StoupentoMesurement, left_wheel_torque_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stoupentoPlugin_msgs::msgs::StoupentoMesurement, left_body_torque_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stoupentoPlugin_msgs::msgs::StoupentoMesurement, right_wheel_vel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stoupentoPlugin_msgs::msgs::StoupentoMesurement, right_joint1_vel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stoupentoPlugin_msgs::msgs::StoupentoMesurement, right_joint2_vel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stoupentoPlugin_msgs::msgs::StoupentoMesurement, right_joint3_vel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stoupentoPlugin_msgs::msgs::StoupentoMesurement, right_joint4_vel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stoupentoPlugin_msgs::msgs::StoupentoMesurement, right_wheel_ang_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stoupentoPlugin_msgs::msgs::StoupentoMesurement, right_joint1_ang_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stoupentoPlugin_msgs::msgs::StoupentoMesurement, right_joint2_ang_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stoupentoPlugin_msgs::msgs::StoupentoMesurement, right_joint3_ang_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stoupentoPlugin_msgs::msgs::StoupentoMesurement, right_joint4_ang_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stoupentoPlugin_msgs::msgs::StoupentoMesurement, right_wheel_torque_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stoupentoPlugin_msgs::msgs::StoupentoMesurement, right_body_torque_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stoupentoPlugin_msgs::msgs::StoupentoMesurement, linear_acc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::stoupentoPlugin_msgs::msgs::StoupentoMesurement, angular_vel_),
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 31, sizeof(::stoupentoPlugin_msgs::msgs::StoupentoMesurement)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::stoupentoPlugin_msgs::msgs::_StoupentoMesurement_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "stoupento_mesurement.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032stoupento_mesurement.proto\022\031stoupentoP"
      "lugin_msgs.msgs\032\016vector3d.proto\"\322\005\n\023Stou"
      "pentoMesurement\022\026\n\016left_wheel_vel\030\001 \002(\001\022"
      "\027\n\017left_joint1_vel\030\002 \002(\001\022\027\n\017left_joint2_"
      "vel\030\003 \002(\001\022\027\n\017left_joint3_vel\030\004 \002(\001\022\027\n\017le"
      "ft_joint4_vel\030\005 \002(\001\022\026\n\016left_wheel_ang\030\006 "
      "\002(\001\022\027\n\017left_joint1_ang\030\007 \002(\001\022\027\n\017left_joi"
      "nt2_ang\030\010 \002(\001\022\027\n\017left_joint3_ang\030\t \002(\001\022\027"
      "\n\017left_joint4_ang\030\n \002(\001\022\031\n\021left_wheel_to"
      "rque\030\013 \002(\001\022\030\n\020left_body_torque\030\014 \002(\001\022\027\n\017"
      "right_wheel_vel\030\r \002(\001\022\030\n\020right_joint1_ve"
      "l\030\016 \002(\001\022\030\n\020right_joint2_vel\030\017 \002(\001\022\030\n\020rig"
      "ht_joint3_vel\030\020 \002(\001\022\030\n\020right_joint4_vel\030"
      "\021 \002(\001\022\027\n\017right_wheel_ang\030\022 \002(\001\022\030\n\020right_"
      "joint1_ang\030\023 \002(\001\022\030\n\020right_joint2_ang\030\024 \002"
      "(\001\022\030\n\020right_joint3_ang\030\025 \002(\001\022\030\n\020right_jo"
      "int4_ang\030\026 \002(\001\022\032\n\022right_wheel_torque\030\027 \002"
      "(\001\022\031\n\021right_body_torque\030\030 \002(\001\022)\n\nlinear_"
      "acc\030\031 \002(\0132\025.gazebo.msgs.Vector3d\022*\n\013angu"
      "lar_vel\030\032 \002(\0132\025.gazebo.msgs.Vector3d"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 796);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "stoupento_mesurement.proto", &protobuf_RegisterTypes);
  ::protobuf_vector3d_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_stoupento_5fmesurement_2eproto
namespace stoupentoPlugin_msgs {
namespace msgs {

// ===================================================================

void StoupentoMesurement::InitAsDefaultInstance() {
  ::stoupentoPlugin_msgs::msgs::_StoupentoMesurement_default_instance_._instance.get_mutable()->linear_acc_ = const_cast< ::gazebo::msgs::Vector3d*>(
      ::gazebo::msgs::Vector3d::internal_default_instance());
  ::stoupentoPlugin_msgs::msgs::_StoupentoMesurement_default_instance_._instance.get_mutable()->angular_vel_ = const_cast< ::gazebo::msgs::Vector3d*>(
      ::gazebo::msgs::Vector3d::internal_default_instance());
}
void StoupentoMesurement::clear_linear_acc() {
  if (linear_acc_ != NULL) linear_acc_->Clear();
  clear_has_linear_acc();
}
void StoupentoMesurement::clear_angular_vel() {
  if (angular_vel_ != NULL) angular_vel_->Clear();
  clear_has_angular_vel();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoupentoMesurement::kLeftWheelVelFieldNumber;
const int StoupentoMesurement::kLeftJoint1VelFieldNumber;
const int StoupentoMesurement::kLeftJoint2VelFieldNumber;
const int StoupentoMesurement::kLeftJoint3VelFieldNumber;
const int StoupentoMesurement::kLeftJoint4VelFieldNumber;
const int StoupentoMesurement::kLeftWheelAngFieldNumber;
const int StoupentoMesurement::kLeftJoint1AngFieldNumber;
const int StoupentoMesurement::kLeftJoint2AngFieldNumber;
const int StoupentoMesurement::kLeftJoint3AngFieldNumber;
const int StoupentoMesurement::kLeftJoint4AngFieldNumber;
const int StoupentoMesurement::kLeftWheelTorqueFieldNumber;
const int StoupentoMesurement::kLeftBodyTorqueFieldNumber;
const int StoupentoMesurement::kRightWheelVelFieldNumber;
const int StoupentoMesurement::kRightJoint1VelFieldNumber;
const int StoupentoMesurement::kRightJoint2VelFieldNumber;
const int StoupentoMesurement::kRightJoint3VelFieldNumber;
const int StoupentoMesurement::kRightJoint4VelFieldNumber;
const int StoupentoMesurement::kRightWheelAngFieldNumber;
const int StoupentoMesurement::kRightJoint1AngFieldNumber;
const int StoupentoMesurement::kRightJoint2AngFieldNumber;
const int StoupentoMesurement::kRightJoint3AngFieldNumber;
const int StoupentoMesurement::kRightJoint4AngFieldNumber;
const int StoupentoMesurement::kRightWheelTorqueFieldNumber;
const int StoupentoMesurement::kRightBodyTorqueFieldNumber;
const int StoupentoMesurement::kLinearAccFieldNumber;
const int StoupentoMesurement::kAngularVelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoupentoMesurement::StoupentoMesurement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_stoupento_5fmesurement_2eproto::scc_info_StoupentoMesurement.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:stoupentoPlugin_msgs.msgs.StoupentoMesurement)
}
StoupentoMesurement::StoupentoMesurement(const StoupentoMesurement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_linear_acc()) {
    linear_acc_ = new ::gazebo::msgs::Vector3d(*from.linear_acc_);
  } else {
    linear_acc_ = NULL;
  }
  if (from.has_angular_vel()) {
    angular_vel_ = new ::gazebo::msgs::Vector3d(*from.angular_vel_);
  } else {
    angular_vel_ = NULL;
  }
  ::memcpy(&left_wheel_vel_, &from.left_wheel_vel_,
    static_cast<size_t>(reinterpret_cast<char*>(&right_body_torque_) -
    reinterpret_cast<char*>(&left_wheel_vel_)) + sizeof(right_body_torque_));
  // @@protoc_insertion_point(copy_constructor:stoupentoPlugin_msgs.msgs.StoupentoMesurement)
}

void StoupentoMesurement::SharedCtor() {
  ::memset(&linear_acc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&right_body_torque_) -
      reinterpret_cast<char*>(&linear_acc_)) + sizeof(right_body_torque_));
}

StoupentoMesurement::~StoupentoMesurement() {
  // @@protoc_insertion_point(destructor:stoupentoPlugin_msgs.msgs.StoupentoMesurement)
  SharedDtor();
}

void StoupentoMesurement::SharedDtor() {
  if (this != internal_default_instance()) delete linear_acc_;
  if (this != internal_default_instance()) delete angular_vel_;
}

void StoupentoMesurement::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StoupentoMesurement::descriptor() {
  ::protobuf_stoupento_5fmesurement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_stoupento_5fmesurement_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StoupentoMesurement& StoupentoMesurement::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_stoupento_5fmesurement_2eproto::scc_info_StoupentoMesurement.base);
  return *internal_default_instance();
}


void StoupentoMesurement::Clear() {
// @@protoc_insertion_point(message_clear_start:stoupentoPlugin_msgs.msgs.StoupentoMesurement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(linear_acc_ != NULL);
      linear_acc_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(angular_vel_ != NULL);
      angular_vel_->Clear();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&left_wheel_vel_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&left_wheel_ang_) -
        reinterpret_cast<char*>(&left_wheel_vel_)) + sizeof(left_wheel_ang_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&left_joint1_ang_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&right_joint1_vel_) -
        reinterpret_cast<char*>(&left_joint1_ang_)) + sizeof(right_joint1_vel_));
  }
  if (cached_has_bits & 16711680u) {
    ::memset(&right_joint2_vel_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&right_joint4_ang_) -
        reinterpret_cast<char*>(&right_joint2_vel_)) + sizeof(right_joint4_ang_));
  }
  if (cached_has_bits & 50331648u) {
    ::memset(&right_wheel_torque_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&right_body_torque_) -
        reinterpret_cast<char*>(&right_wheel_torque_)) + sizeof(right_body_torque_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StoupentoMesurement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:stoupentoPlugin_msgs.msgs.StoupentoMesurement)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double left_wheel_vel = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_left_wheel_vel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &left_wheel_vel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double left_joint1_vel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_left_joint1_vel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &left_joint1_vel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double left_joint2_vel = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_left_joint2_vel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &left_joint2_vel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double left_joint3_vel = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_left_joint3_vel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &left_joint3_vel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double left_joint4_vel = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_left_joint4_vel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &left_joint4_vel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double left_wheel_ang = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_left_wheel_ang();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &left_wheel_ang_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double left_joint1_ang = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_left_joint1_ang();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &left_joint1_ang_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double left_joint2_ang = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_left_joint2_ang();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &left_joint2_ang_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double left_joint3_ang = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {
          set_has_left_joint3_ang();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &left_joint3_ang_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double left_joint4_ang = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {
          set_has_left_joint4_ang();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &left_joint4_ang_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double left_wheel_torque = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {
          set_has_left_wheel_torque();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &left_wheel_torque_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double left_body_torque = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {
          set_has_left_body_torque();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &left_body_torque_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double right_wheel_vel = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u /* 105 & 0xFF */)) {
          set_has_right_wheel_vel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &right_wheel_vel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double right_joint1_vel = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u /* 113 & 0xFF */)) {
          set_has_right_joint1_vel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &right_joint1_vel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double right_joint2_vel = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(121u /* 121 & 0xFF */)) {
          set_has_right_joint2_vel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &right_joint2_vel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double right_joint3_vel = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(129u /* 129 & 0xFF */)) {
          set_has_right_joint3_vel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &right_joint3_vel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double right_joint4_vel = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(137u /* 137 & 0xFF */)) {
          set_has_right_joint4_vel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &right_joint4_vel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double right_wheel_ang = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(145u /* 145 & 0xFF */)) {
          set_has_right_wheel_ang();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &right_wheel_ang_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double right_joint1_ang = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(153u /* 153 & 0xFF */)) {
          set_has_right_joint1_ang();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &right_joint1_ang_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double right_joint2_ang = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(161u /* 161 & 0xFF */)) {
          set_has_right_joint2_ang();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &right_joint2_ang_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double right_joint3_ang = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(169u /* 169 & 0xFF */)) {
          set_has_right_joint3_ang();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &right_joint3_ang_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double right_joint4_ang = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(177u /* 177 & 0xFF */)) {
          set_has_right_joint4_ang();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &right_joint4_ang_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double right_wheel_torque = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(185u /* 185 & 0xFF */)) {
          set_has_right_wheel_torque();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &right_wheel_torque_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double right_body_torque = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(193u /* 193 & 0xFF */)) {
          set_has_right_body_torque();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &right_body_torque_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .gazebo.msgs.Vector3d linear_acc = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_linear_acc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .gazebo.msgs.Vector3d angular_vel = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_angular_vel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:stoupentoPlugin_msgs.msgs.StoupentoMesurement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:stoupentoPlugin_msgs.msgs.StoupentoMesurement)
  return false;
#undef DO_
}

void StoupentoMesurement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:stoupentoPlugin_msgs.msgs.StoupentoMesurement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double left_wheel_vel = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->left_wheel_vel(), output);
  }

  // required double left_joint1_vel = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->left_joint1_vel(), output);
  }

  // required double left_joint2_vel = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->left_joint2_vel(), output);
  }

  // required double left_joint3_vel = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->left_joint3_vel(), output);
  }

  // required double left_joint4_vel = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->left_joint4_vel(), output);
  }

  // required double left_wheel_ang = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->left_wheel_ang(), output);
  }

  // required double left_joint1_ang = 7;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->left_joint1_ang(), output);
  }

  // required double left_joint2_ang = 8;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->left_joint2_ang(), output);
  }

  // required double left_joint3_ang = 9;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->left_joint3_ang(), output);
  }

  // required double left_joint4_ang = 10;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->left_joint4_ang(), output);
  }

  // required double left_wheel_torque = 11;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->left_wheel_torque(), output);
  }

  // required double left_body_torque = 12;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->left_body_torque(), output);
  }

  // required double right_wheel_vel = 13;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->right_wheel_vel(), output);
  }

  // required double right_joint1_vel = 14;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->right_joint1_vel(), output);
  }

  // required double right_joint2_vel = 15;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->right_joint2_vel(), output);
  }

  // required double right_joint3_vel = 16;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->right_joint3_vel(), output);
  }

  // required double right_joint4_vel = 17;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(17, this->right_joint4_vel(), output);
  }

  // required double right_wheel_ang = 18;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(18, this->right_wheel_ang(), output);
  }

  // required double right_joint1_ang = 19;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(19, this->right_joint1_ang(), output);
  }

  // required double right_joint2_ang = 20;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(20, this->right_joint2_ang(), output);
  }

  // required double right_joint3_ang = 21;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(21, this->right_joint3_ang(), output);
  }

  // required double right_joint4_ang = 22;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(22, this->right_joint4_ang(), output);
  }

  // required double right_wheel_torque = 23;
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(23, this->right_wheel_torque(), output);
  }

  // required double right_body_torque = 24;
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(24, this->right_body_torque(), output);
  }

  // required .gazebo.msgs.Vector3d linear_acc = 25;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->_internal_linear_acc(), output);
  }

  // required .gazebo.msgs.Vector3d angular_vel = 26;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->_internal_angular_vel(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:stoupentoPlugin_msgs.msgs.StoupentoMesurement)
}

::google::protobuf::uint8* StoupentoMesurement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:stoupentoPlugin_msgs.msgs.StoupentoMesurement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double left_wheel_vel = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->left_wheel_vel(), target);
  }

  // required double left_joint1_vel = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->left_joint1_vel(), target);
  }

  // required double left_joint2_vel = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->left_joint2_vel(), target);
  }

  // required double left_joint3_vel = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->left_joint3_vel(), target);
  }

  // required double left_joint4_vel = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->left_joint4_vel(), target);
  }

  // required double left_wheel_ang = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->left_wheel_ang(), target);
  }

  // required double left_joint1_ang = 7;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->left_joint1_ang(), target);
  }

  // required double left_joint2_ang = 8;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->left_joint2_ang(), target);
  }

  // required double left_joint3_ang = 9;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->left_joint3_ang(), target);
  }

  // required double left_joint4_ang = 10;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->left_joint4_ang(), target);
  }

  // required double left_wheel_torque = 11;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->left_wheel_torque(), target);
  }

  // required double left_body_torque = 12;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->left_body_torque(), target);
  }

  // required double right_wheel_vel = 13;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->right_wheel_vel(), target);
  }

  // required double right_joint1_vel = 14;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->right_joint1_vel(), target);
  }

  // required double right_joint2_vel = 15;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->right_joint2_vel(), target);
  }

  // required double right_joint3_vel = 16;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->right_joint3_vel(), target);
  }

  // required double right_joint4_vel = 17;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(17, this->right_joint4_vel(), target);
  }

  // required double right_wheel_ang = 18;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(18, this->right_wheel_ang(), target);
  }

  // required double right_joint1_ang = 19;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(19, this->right_joint1_ang(), target);
  }

  // required double right_joint2_ang = 20;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(20, this->right_joint2_ang(), target);
  }

  // required double right_joint3_ang = 21;
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(21, this->right_joint3_ang(), target);
  }

  // required double right_joint4_ang = 22;
  if (cached_has_bits & 0x00800000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(22, this->right_joint4_ang(), target);
  }

  // required double right_wheel_torque = 23;
  if (cached_has_bits & 0x01000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(23, this->right_wheel_torque(), target);
  }

  // required double right_body_torque = 24;
  if (cached_has_bits & 0x02000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(24, this->right_body_torque(), target);
  }

  // required .gazebo.msgs.Vector3d linear_acc = 25;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->_internal_linear_acc(), deterministic, target);
  }

  // required .gazebo.msgs.Vector3d angular_vel = 26;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, this->_internal_angular_vel(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:stoupentoPlugin_msgs.msgs.StoupentoMesurement)
  return target;
}

size_t StoupentoMesurement::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:stoupentoPlugin_msgs.msgs.StoupentoMesurement)
  size_t total_size = 0;

  if (has_linear_acc()) {
    // required .gazebo.msgs.Vector3d linear_acc = 25;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *linear_acc_);
  }

  if (has_angular_vel()) {
    // required .gazebo.msgs.Vector3d angular_vel = 26;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *angular_vel_);
  }

  if (has_left_wheel_vel()) {
    // required double left_wheel_vel = 1;
    total_size += 1 + 8;
  }

  if (has_left_joint1_vel()) {
    // required double left_joint1_vel = 2;
    total_size += 1 + 8;
  }

  if (has_left_joint2_vel()) {
    // required double left_joint2_vel = 3;
    total_size += 1 + 8;
  }

  if (has_left_joint3_vel()) {
    // required double left_joint3_vel = 4;
    total_size += 1 + 8;
  }

  if (has_left_joint4_vel()) {
    // required double left_joint4_vel = 5;
    total_size += 1 + 8;
  }

  if (has_left_wheel_ang()) {
    // required double left_wheel_ang = 6;
    total_size += 1 + 8;
  }

  if (has_left_joint1_ang()) {
    // required double left_joint1_ang = 7;
    total_size += 1 + 8;
  }

  if (has_left_joint2_ang()) {
    // required double left_joint2_ang = 8;
    total_size += 1 + 8;
  }

  if (has_left_joint3_ang()) {
    // required double left_joint3_ang = 9;
    total_size += 1 + 8;
  }

  if (has_left_joint4_ang()) {
    // required double left_joint4_ang = 10;
    total_size += 1 + 8;
  }

  if (has_left_wheel_torque()) {
    // required double left_wheel_torque = 11;
    total_size += 1 + 8;
  }

  if (has_left_body_torque()) {
    // required double left_body_torque = 12;
    total_size += 1 + 8;
  }

  if (has_right_wheel_vel()) {
    // required double right_wheel_vel = 13;
    total_size += 1 + 8;
  }

  if (has_right_joint1_vel()) {
    // required double right_joint1_vel = 14;
    total_size += 1 + 8;
  }

  if (has_right_joint2_vel()) {
    // required double right_joint2_vel = 15;
    total_size += 1 + 8;
  }

  if (has_right_joint3_vel()) {
    // required double right_joint3_vel = 16;
    total_size += 2 + 8;
  }

  if (has_right_joint4_vel()) {
    // required double right_joint4_vel = 17;
    total_size += 2 + 8;
  }

  if (has_right_wheel_ang()) {
    // required double right_wheel_ang = 18;
    total_size += 2 + 8;
  }

  if (has_right_joint1_ang()) {
    // required double right_joint1_ang = 19;
    total_size += 2 + 8;
  }

  if (has_right_joint2_ang()) {
    // required double right_joint2_ang = 20;
    total_size += 2 + 8;
  }

  if (has_right_joint3_ang()) {
    // required double right_joint3_ang = 21;
    total_size += 2 + 8;
  }

  if (has_right_joint4_ang()) {
    // required double right_joint4_ang = 22;
    total_size += 2 + 8;
  }

  if (has_right_wheel_torque()) {
    // required double right_wheel_torque = 23;
    total_size += 2 + 8;
  }

  if (has_right_body_torque()) {
    // required double right_body_torque = 24;
    total_size += 2 + 8;
  }

  return total_size;
}
size_t StoupentoMesurement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:stoupentoPlugin_msgs.msgs.StoupentoMesurement)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x03ffffff) ^ 0x03ffffff) == 0) {  // All required fields are present.
    // required .gazebo.msgs.Vector3d linear_acc = 25;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *linear_acc_);

    // required .gazebo.msgs.Vector3d angular_vel = 26;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *angular_vel_);

    // required double left_wheel_vel = 1;
    total_size += 1 + 8;

    // required double left_joint1_vel = 2;
    total_size += 1 + 8;

    // required double left_joint2_vel = 3;
    total_size += 1 + 8;

    // required double left_joint3_vel = 4;
    total_size += 1 + 8;

    // required double left_joint4_vel = 5;
    total_size += 1 + 8;

    // required double left_wheel_ang = 6;
    total_size += 1 + 8;

    // required double left_joint1_ang = 7;
    total_size += 1 + 8;

    // required double left_joint2_ang = 8;
    total_size += 1 + 8;

    // required double left_joint3_ang = 9;
    total_size += 1 + 8;

    // required double left_joint4_ang = 10;
    total_size += 1 + 8;

    // required double left_wheel_torque = 11;
    total_size += 1 + 8;

    // required double left_body_torque = 12;
    total_size += 1 + 8;

    // required double right_wheel_vel = 13;
    total_size += 1 + 8;

    // required double right_joint1_vel = 14;
    total_size += 1 + 8;

    // required double right_joint2_vel = 15;
    total_size += 1 + 8;

    // required double right_joint3_vel = 16;
    total_size += 2 + 8;

    // required double right_joint4_vel = 17;
    total_size += 2 + 8;

    // required double right_wheel_ang = 18;
    total_size += 2 + 8;

    // required double right_joint1_ang = 19;
    total_size += 2 + 8;

    // required double right_joint2_ang = 20;
    total_size += 2 + 8;

    // required double right_joint3_ang = 21;
    total_size += 2 + 8;

    // required double right_joint4_ang = 22;
    total_size += 2 + 8;

    // required double right_wheel_torque = 23;
    total_size += 2 + 8;

    // required double right_body_torque = 24;
    total_size += 2 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StoupentoMesurement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:stoupentoPlugin_msgs.msgs.StoupentoMesurement)
  GOOGLE_DCHECK_NE(&from, this);
  const StoupentoMesurement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StoupentoMesurement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:stoupentoPlugin_msgs.msgs.StoupentoMesurement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:stoupentoPlugin_msgs.msgs.StoupentoMesurement)
    MergeFrom(*source);
  }
}

void StoupentoMesurement::MergeFrom(const StoupentoMesurement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:stoupentoPlugin_msgs.msgs.StoupentoMesurement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_linear_acc()->::gazebo::msgs::Vector3d::MergeFrom(from.linear_acc());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_angular_vel()->::gazebo::msgs::Vector3d::MergeFrom(from.angular_vel());
    }
    if (cached_has_bits & 0x00000004u) {
      left_wheel_vel_ = from.left_wheel_vel_;
    }
    if (cached_has_bits & 0x00000008u) {
      left_joint1_vel_ = from.left_joint1_vel_;
    }
    if (cached_has_bits & 0x00000010u) {
      left_joint2_vel_ = from.left_joint2_vel_;
    }
    if (cached_has_bits & 0x00000020u) {
      left_joint3_vel_ = from.left_joint3_vel_;
    }
    if (cached_has_bits & 0x00000040u) {
      left_joint4_vel_ = from.left_joint4_vel_;
    }
    if (cached_has_bits & 0x00000080u) {
      left_wheel_ang_ = from.left_wheel_ang_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      left_joint1_ang_ = from.left_joint1_ang_;
    }
    if (cached_has_bits & 0x00000200u) {
      left_joint2_ang_ = from.left_joint2_ang_;
    }
    if (cached_has_bits & 0x00000400u) {
      left_joint3_ang_ = from.left_joint3_ang_;
    }
    if (cached_has_bits & 0x00000800u) {
      left_joint4_ang_ = from.left_joint4_ang_;
    }
    if (cached_has_bits & 0x00001000u) {
      left_wheel_torque_ = from.left_wheel_torque_;
    }
    if (cached_has_bits & 0x00002000u) {
      left_body_torque_ = from.left_body_torque_;
    }
    if (cached_has_bits & 0x00004000u) {
      right_wheel_vel_ = from.right_wheel_vel_;
    }
    if (cached_has_bits & 0x00008000u) {
      right_joint1_vel_ = from.right_joint1_vel_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      right_joint2_vel_ = from.right_joint2_vel_;
    }
    if (cached_has_bits & 0x00020000u) {
      right_joint3_vel_ = from.right_joint3_vel_;
    }
    if (cached_has_bits & 0x00040000u) {
      right_joint4_vel_ = from.right_joint4_vel_;
    }
    if (cached_has_bits & 0x00080000u) {
      right_wheel_ang_ = from.right_wheel_ang_;
    }
    if (cached_has_bits & 0x00100000u) {
      right_joint1_ang_ = from.right_joint1_ang_;
    }
    if (cached_has_bits & 0x00200000u) {
      right_joint2_ang_ = from.right_joint2_ang_;
    }
    if (cached_has_bits & 0x00400000u) {
      right_joint3_ang_ = from.right_joint3_ang_;
    }
    if (cached_has_bits & 0x00800000u) {
      right_joint4_ang_ = from.right_joint4_ang_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 50331648u) {
    if (cached_has_bits & 0x01000000u) {
      right_wheel_torque_ = from.right_wheel_torque_;
    }
    if (cached_has_bits & 0x02000000u) {
      right_body_torque_ = from.right_body_torque_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StoupentoMesurement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:stoupentoPlugin_msgs.msgs.StoupentoMesurement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoupentoMesurement::CopyFrom(const StoupentoMesurement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:stoupentoPlugin_msgs.msgs.StoupentoMesurement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoupentoMesurement::IsInitialized() const {
  if ((_has_bits_[0] & 0x03ffffff) != 0x03ffffff) return false;
  if (has_linear_acc()) {
    if (!this->linear_acc_->IsInitialized()) return false;
  }
  if (has_angular_vel()) {
    if (!this->angular_vel_->IsInitialized()) return false;
  }
  return true;
}

void StoupentoMesurement::Swap(StoupentoMesurement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoupentoMesurement::InternalSwap(StoupentoMesurement* other) {
  using std::swap;
  swap(linear_acc_, other->linear_acc_);
  swap(angular_vel_, other->angular_vel_);
  swap(left_wheel_vel_, other->left_wheel_vel_);
  swap(left_joint1_vel_, other->left_joint1_vel_);
  swap(left_joint2_vel_, other->left_joint2_vel_);
  swap(left_joint3_vel_, other->left_joint3_vel_);
  swap(left_joint4_vel_, other->left_joint4_vel_);
  swap(left_wheel_ang_, other->left_wheel_ang_);
  swap(left_joint1_ang_, other->left_joint1_ang_);
  swap(left_joint2_ang_, other->left_joint2_ang_);
  swap(left_joint3_ang_, other->left_joint3_ang_);
  swap(left_joint4_ang_, other->left_joint4_ang_);
  swap(left_wheel_torque_, other->left_wheel_torque_);
  swap(left_body_torque_, other->left_body_torque_);
  swap(right_wheel_vel_, other->right_wheel_vel_);
  swap(right_joint1_vel_, other->right_joint1_vel_);
  swap(right_joint2_vel_, other->right_joint2_vel_);
  swap(right_joint3_vel_, other->right_joint3_vel_);
  swap(right_joint4_vel_, other->right_joint4_vel_);
  swap(right_wheel_ang_, other->right_wheel_ang_);
  swap(right_joint1_ang_, other->right_joint1_ang_);
  swap(right_joint2_ang_, other->right_joint2_ang_);
  swap(right_joint3_ang_, other->right_joint3_ang_);
  swap(right_joint4_ang_, other->right_joint4_ang_);
  swap(right_wheel_torque_, other->right_wheel_torque_);
  swap(right_body_torque_, other->right_body_torque_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StoupentoMesurement::GetMetadata() const {
  protobuf_stoupento_5fmesurement_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_stoupento_5fmesurement_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace msgs
}  // namespace stoupentoPlugin_msgs
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::stoupentoPlugin_msgs::msgs::StoupentoMesurement* Arena::CreateMaybeMessage< ::stoupentoPlugin_msgs::msgs::StoupentoMesurement >(Arena* arena) {
  return Arena::CreateInternal< ::stoupentoPlugin_msgs::msgs::StoupentoMesurement >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
