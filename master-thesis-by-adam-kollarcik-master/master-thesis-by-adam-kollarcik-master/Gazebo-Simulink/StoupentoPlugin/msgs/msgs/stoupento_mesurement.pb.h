// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: stoupento_mesurement.proto

#ifndef PROTOBUF_INCLUDED_stoupento_5fmesurement_2eproto
#define PROTOBUF_INCLUDED_stoupento_5fmesurement_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_stoupento_5fmesurement_2eproto 

namespace protobuf_stoupento_5fmesurement_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_stoupento_5fmesurement_2eproto
namespace stoupentoPlugin_msgs {
namespace msgs {
class StoupentoMesurement;
class StoupentoMesurementDefaultTypeInternal;
extern StoupentoMesurementDefaultTypeInternal _StoupentoMesurement_default_instance_;
}  // namespace msgs
}  // namespace stoupentoPlugin_msgs
namespace google {
namespace protobuf {
template<> ::stoupentoPlugin_msgs::msgs::StoupentoMesurement* Arena::CreateMaybeMessage<::stoupentoPlugin_msgs::msgs::StoupentoMesurement>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace stoupentoPlugin_msgs {
namespace msgs {

// ===================================================================

class StoupentoMesurement : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:stoupentoPlugin_msgs.msgs.StoupentoMesurement) */ {
 public:
  StoupentoMesurement();
  virtual ~StoupentoMesurement();

  StoupentoMesurement(const StoupentoMesurement& from);

  inline StoupentoMesurement& operator=(const StoupentoMesurement& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StoupentoMesurement(StoupentoMesurement&& from) noexcept
    : StoupentoMesurement() {
    *this = ::std::move(from);
  }

  inline StoupentoMesurement& operator=(StoupentoMesurement&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StoupentoMesurement& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StoupentoMesurement* internal_default_instance() {
    return reinterpret_cast<const StoupentoMesurement*>(
               &_StoupentoMesurement_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(StoupentoMesurement* other);
  friend void swap(StoupentoMesurement& a, StoupentoMesurement& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StoupentoMesurement* New() const final {
    return CreateMaybeMessage<StoupentoMesurement>(NULL);
  }

  StoupentoMesurement* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StoupentoMesurement>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StoupentoMesurement& from);
  void MergeFrom(const StoupentoMesurement& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StoupentoMesurement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double left_wheel_vel = 1;
  bool has_left_wheel_vel() const;
  void clear_left_wheel_vel();
  static const int kLeftWheelVelFieldNumber = 1;
  double left_wheel_vel() const;
  void set_left_wheel_vel(double value);

  // required double left_joint1_vel = 2;
  bool has_left_joint1_vel() const;
  void clear_left_joint1_vel();
  static const int kLeftJoint1VelFieldNumber = 2;
  double left_joint1_vel() const;
  void set_left_joint1_vel(double value);

  // required double left_joint2_vel = 3;
  bool has_left_joint2_vel() const;
  void clear_left_joint2_vel();
  static const int kLeftJoint2VelFieldNumber = 3;
  double left_joint2_vel() const;
  void set_left_joint2_vel(double value);

  // required double left_joint3_vel = 4;
  bool has_left_joint3_vel() const;
  void clear_left_joint3_vel();
  static const int kLeftJoint3VelFieldNumber = 4;
  double left_joint3_vel() const;
  void set_left_joint3_vel(double value);

  // required double left_joint4_vel = 5;
  bool has_left_joint4_vel() const;
  void clear_left_joint4_vel();
  static const int kLeftJoint4VelFieldNumber = 5;
  double left_joint4_vel() const;
  void set_left_joint4_vel(double value);

  // required double left_wheel_ang = 6;
  bool has_left_wheel_ang() const;
  void clear_left_wheel_ang();
  static const int kLeftWheelAngFieldNumber = 6;
  double left_wheel_ang() const;
  void set_left_wheel_ang(double value);

  // required double left_joint1_ang = 7;
  bool has_left_joint1_ang() const;
  void clear_left_joint1_ang();
  static const int kLeftJoint1AngFieldNumber = 7;
  double left_joint1_ang() const;
  void set_left_joint1_ang(double value);

  // required double left_joint2_ang = 8;
  bool has_left_joint2_ang() const;
  void clear_left_joint2_ang();
  static const int kLeftJoint2AngFieldNumber = 8;
  double left_joint2_ang() const;
  void set_left_joint2_ang(double value);

  // required double left_joint3_ang = 9;
  bool has_left_joint3_ang() const;
  void clear_left_joint3_ang();
  static const int kLeftJoint3AngFieldNumber = 9;
  double left_joint3_ang() const;
  void set_left_joint3_ang(double value);

  // required double left_joint4_ang = 10;
  bool has_left_joint4_ang() const;
  void clear_left_joint4_ang();
  static const int kLeftJoint4AngFieldNumber = 10;
  double left_joint4_ang() const;
  void set_left_joint4_ang(double value);

  // required double left_wheel_torque = 11;
  bool has_left_wheel_torque() const;
  void clear_left_wheel_torque();
  static const int kLeftWheelTorqueFieldNumber = 11;
  double left_wheel_torque() const;
  void set_left_wheel_torque(double value);

  // required double left_body_torque = 12;
  bool has_left_body_torque() const;
  void clear_left_body_torque();
  static const int kLeftBodyTorqueFieldNumber = 12;
  double left_body_torque() const;
  void set_left_body_torque(double value);

  // required double right_wheel_vel = 13;
  bool has_right_wheel_vel() const;
  void clear_right_wheel_vel();
  static const int kRightWheelVelFieldNumber = 13;
  double right_wheel_vel() const;
  void set_right_wheel_vel(double value);

  // required double right_joint1_vel = 14;
  bool has_right_joint1_vel() const;
  void clear_right_joint1_vel();
  static const int kRightJoint1VelFieldNumber = 14;
  double right_joint1_vel() const;
  void set_right_joint1_vel(double value);

  // required double right_joint2_vel = 15;
  bool has_right_joint2_vel() const;
  void clear_right_joint2_vel();
  static const int kRightJoint2VelFieldNumber = 15;
  double right_joint2_vel() const;
  void set_right_joint2_vel(double value);

  // required double right_joint3_vel = 16;
  bool has_right_joint3_vel() const;
  void clear_right_joint3_vel();
  static const int kRightJoint3VelFieldNumber = 16;
  double right_joint3_vel() const;
  void set_right_joint3_vel(double value);

  // required double right_joint4_vel = 17;
  bool has_right_joint4_vel() const;
  void clear_right_joint4_vel();
  static const int kRightJoint4VelFieldNumber = 17;
  double right_joint4_vel() const;
  void set_right_joint4_vel(double value);

  // required double right_wheel_ang = 18;
  bool has_right_wheel_ang() const;
  void clear_right_wheel_ang();
  static const int kRightWheelAngFieldNumber = 18;
  double right_wheel_ang() const;
  void set_right_wheel_ang(double value);

  // required double right_joint1_ang = 19;
  bool has_right_joint1_ang() const;
  void clear_right_joint1_ang();
  static const int kRightJoint1AngFieldNumber = 19;
  double right_joint1_ang() const;
  void set_right_joint1_ang(double value);

  // required double right_joint2_ang = 20;
  bool has_right_joint2_ang() const;
  void clear_right_joint2_ang();
  static const int kRightJoint2AngFieldNumber = 20;
  double right_joint2_ang() const;
  void set_right_joint2_ang(double value);

  // required double right_joint3_ang = 21;
  bool has_right_joint3_ang() const;
  void clear_right_joint3_ang();
  static const int kRightJoint3AngFieldNumber = 21;
  double right_joint3_ang() const;
  void set_right_joint3_ang(double value);

  // required double right_joint4_ang = 22;
  bool has_right_joint4_ang() const;
  void clear_right_joint4_ang();
  static const int kRightJoint4AngFieldNumber = 22;
  double right_joint4_ang() const;
  void set_right_joint4_ang(double value);

  // required double right_wheel_torque = 23;
  bool has_right_wheel_torque() const;
  void clear_right_wheel_torque();
  static const int kRightWheelTorqueFieldNumber = 23;
  double right_wheel_torque() const;
  void set_right_wheel_torque(double value);

  // required double right_body_torque = 24;
  bool has_right_body_torque() const;
  void clear_right_body_torque();
  static const int kRightBodyTorqueFieldNumber = 24;
  double right_body_torque() const;
  void set_right_body_torque(double value);

  // @@protoc_insertion_point(class_scope:stoupentoPlugin_msgs.msgs.StoupentoMesurement)
 private:
  void set_has_left_wheel_vel();
  void clear_has_left_wheel_vel();
  void set_has_left_joint1_vel();
  void clear_has_left_joint1_vel();
  void set_has_left_joint2_vel();
  void clear_has_left_joint2_vel();
  void set_has_left_joint3_vel();
  void clear_has_left_joint3_vel();
  void set_has_left_joint4_vel();
  void clear_has_left_joint4_vel();
  void set_has_left_wheel_ang();
  void clear_has_left_wheel_ang();
  void set_has_left_joint1_ang();
  void clear_has_left_joint1_ang();
  void set_has_left_joint2_ang();
  void clear_has_left_joint2_ang();
  void set_has_left_joint3_ang();
  void clear_has_left_joint3_ang();
  void set_has_left_joint4_ang();
  void clear_has_left_joint4_ang();
  void set_has_left_wheel_torque();
  void clear_has_left_wheel_torque();
  void set_has_left_body_torque();
  void clear_has_left_body_torque();
  void set_has_right_wheel_vel();
  void clear_has_right_wheel_vel();
  void set_has_right_joint1_vel();
  void clear_has_right_joint1_vel();
  void set_has_right_joint2_vel();
  void clear_has_right_joint2_vel();
  void set_has_right_joint3_vel();
  void clear_has_right_joint3_vel();
  void set_has_right_joint4_vel();
  void clear_has_right_joint4_vel();
  void set_has_right_wheel_ang();
  void clear_has_right_wheel_ang();
  void set_has_right_joint1_ang();
  void clear_has_right_joint1_ang();
  void set_has_right_joint2_ang();
  void clear_has_right_joint2_ang();
  void set_has_right_joint3_ang();
  void clear_has_right_joint3_ang();
  void set_has_right_joint4_ang();
  void clear_has_right_joint4_ang();
  void set_has_right_wheel_torque();
  void clear_has_right_wheel_torque();
  void set_has_right_body_torque();
  void clear_has_right_body_torque();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  double left_wheel_vel_;
  double left_joint1_vel_;
  double left_joint2_vel_;
  double left_joint3_vel_;
  double left_joint4_vel_;
  double left_wheel_ang_;
  double left_joint1_ang_;
  double left_joint2_ang_;
  double left_joint3_ang_;
  double left_joint4_ang_;
  double left_wheel_torque_;
  double left_body_torque_;
  double right_wheel_vel_;
  double right_joint1_vel_;
  double right_joint2_vel_;
  double right_joint3_vel_;
  double right_joint4_vel_;
  double right_wheel_ang_;
  double right_joint1_ang_;
  double right_joint2_ang_;
  double right_joint3_ang_;
  double right_joint4_ang_;
  double right_wheel_torque_;
  double right_body_torque_;
  friend struct ::protobuf_stoupento_5fmesurement_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// StoupentoMesurement

// required double left_wheel_vel = 1;
inline bool StoupentoMesurement::has_left_wheel_vel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StoupentoMesurement::set_has_left_wheel_vel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StoupentoMesurement::clear_has_left_wheel_vel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StoupentoMesurement::clear_left_wheel_vel() {
  left_wheel_vel_ = 0;
  clear_has_left_wheel_vel();
}
inline double StoupentoMesurement::left_wheel_vel() const {
  // @@protoc_insertion_point(field_get:stoupentoPlugin_msgs.msgs.StoupentoMesurement.left_wheel_vel)
  return left_wheel_vel_;
}
inline void StoupentoMesurement::set_left_wheel_vel(double value) {
  set_has_left_wheel_vel();
  left_wheel_vel_ = value;
  // @@protoc_insertion_point(field_set:stoupentoPlugin_msgs.msgs.StoupentoMesurement.left_wheel_vel)
}

// required double left_joint1_vel = 2;
inline bool StoupentoMesurement::has_left_joint1_vel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StoupentoMesurement::set_has_left_joint1_vel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StoupentoMesurement::clear_has_left_joint1_vel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StoupentoMesurement::clear_left_joint1_vel() {
  left_joint1_vel_ = 0;
  clear_has_left_joint1_vel();
}
inline double StoupentoMesurement::left_joint1_vel() const {
  // @@protoc_insertion_point(field_get:stoupentoPlugin_msgs.msgs.StoupentoMesurement.left_joint1_vel)
  return left_joint1_vel_;
}
inline void StoupentoMesurement::set_left_joint1_vel(double value) {
  set_has_left_joint1_vel();
  left_joint1_vel_ = value;
  // @@protoc_insertion_point(field_set:stoupentoPlugin_msgs.msgs.StoupentoMesurement.left_joint1_vel)
}

// required double left_joint2_vel = 3;
inline bool StoupentoMesurement::has_left_joint2_vel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StoupentoMesurement::set_has_left_joint2_vel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StoupentoMesurement::clear_has_left_joint2_vel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StoupentoMesurement::clear_left_joint2_vel() {
  left_joint2_vel_ = 0;
  clear_has_left_joint2_vel();
}
inline double StoupentoMesurement::left_joint2_vel() const {
  // @@protoc_insertion_point(field_get:stoupentoPlugin_msgs.msgs.StoupentoMesurement.left_joint2_vel)
  return left_joint2_vel_;
}
inline void StoupentoMesurement::set_left_joint2_vel(double value) {
  set_has_left_joint2_vel();
  left_joint2_vel_ = value;
  // @@protoc_insertion_point(field_set:stoupentoPlugin_msgs.msgs.StoupentoMesurement.left_joint2_vel)
}

// required double left_joint3_vel = 4;
inline bool StoupentoMesurement::has_left_joint3_vel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StoupentoMesurement::set_has_left_joint3_vel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StoupentoMesurement::clear_has_left_joint3_vel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StoupentoMesurement::clear_left_joint3_vel() {
  left_joint3_vel_ = 0;
  clear_has_left_joint3_vel();
}
inline double StoupentoMesurement::left_joint3_vel() const {
  // @@protoc_insertion_point(field_get:stoupentoPlugin_msgs.msgs.StoupentoMesurement.left_joint3_vel)
  return left_joint3_vel_;
}
inline void StoupentoMesurement::set_left_joint3_vel(double value) {
  set_has_left_joint3_vel();
  left_joint3_vel_ = value;
  // @@protoc_insertion_point(field_set:stoupentoPlugin_msgs.msgs.StoupentoMesurement.left_joint3_vel)
}

// required double left_joint4_vel = 5;
inline bool StoupentoMesurement::has_left_joint4_vel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StoupentoMesurement::set_has_left_joint4_vel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StoupentoMesurement::clear_has_left_joint4_vel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StoupentoMesurement::clear_left_joint4_vel() {
  left_joint4_vel_ = 0;
  clear_has_left_joint4_vel();
}
inline double StoupentoMesurement::left_joint4_vel() const {
  // @@protoc_insertion_point(field_get:stoupentoPlugin_msgs.msgs.StoupentoMesurement.left_joint4_vel)
  return left_joint4_vel_;
}
inline void StoupentoMesurement::set_left_joint4_vel(double value) {
  set_has_left_joint4_vel();
  left_joint4_vel_ = value;
  // @@protoc_insertion_point(field_set:stoupentoPlugin_msgs.msgs.StoupentoMesurement.left_joint4_vel)
}

// required double left_wheel_ang = 6;
inline bool StoupentoMesurement::has_left_wheel_ang() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StoupentoMesurement::set_has_left_wheel_ang() {
  _has_bits_[0] |= 0x00000020u;
}
inline void StoupentoMesurement::clear_has_left_wheel_ang() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void StoupentoMesurement::clear_left_wheel_ang() {
  left_wheel_ang_ = 0;
  clear_has_left_wheel_ang();
}
inline double StoupentoMesurement::left_wheel_ang() const {
  // @@protoc_insertion_point(field_get:stoupentoPlugin_msgs.msgs.StoupentoMesurement.left_wheel_ang)
  return left_wheel_ang_;
}
inline void StoupentoMesurement::set_left_wheel_ang(double value) {
  set_has_left_wheel_ang();
  left_wheel_ang_ = value;
  // @@protoc_insertion_point(field_set:stoupentoPlugin_msgs.msgs.StoupentoMesurement.left_wheel_ang)
}

// required double left_joint1_ang = 7;
inline bool StoupentoMesurement::has_left_joint1_ang() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void StoupentoMesurement::set_has_left_joint1_ang() {
  _has_bits_[0] |= 0x00000040u;
}
inline void StoupentoMesurement::clear_has_left_joint1_ang() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void StoupentoMesurement::clear_left_joint1_ang() {
  left_joint1_ang_ = 0;
  clear_has_left_joint1_ang();
}
inline double StoupentoMesurement::left_joint1_ang() const {
  // @@protoc_insertion_point(field_get:stoupentoPlugin_msgs.msgs.StoupentoMesurement.left_joint1_ang)
  return left_joint1_ang_;
}
inline void StoupentoMesurement::set_left_joint1_ang(double value) {
  set_has_left_joint1_ang();
  left_joint1_ang_ = value;
  // @@protoc_insertion_point(field_set:stoupentoPlugin_msgs.msgs.StoupentoMesurement.left_joint1_ang)
}

// required double left_joint2_ang = 8;
inline bool StoupentoMesurement::has_left_joint2_ang() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void StoupentoMesurement::set_has_left_joint2_ang() {
  _has_bits_[0] |= 0x00000080u;
}
inline void StoupentoMesurement::clear_has_left_joint2_ang() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void StoupentoMesurement::clear_left_joint2_ang() {
  left_joint2_ang_ = 0;
  clear_has_left_joint2_ang();
}
inline double StoupentoMesurement::left_joint2_ang() const {
  // @@protoc_insertion_point(field_get:stoupentoPlugin_msgs.msgs.StoupentoMesurement.left_joint2_ang)
  return left_joint2_ang_;
}
inline void StoupentoMesurement::set_left_joint2_ang(double value) {
  set_has_left_joint2_ang();
  left_joint2_ang_ = value;
  // @@protoc_insertion_point(field_set:stoupentoPlugin_msgs.msgs.StoupentoMesurement.left_joint2_ang)
}

// required double left_joint3_ang = 9;
inline bool StoupentoMesurement::has_left_joint3_ang() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void StoupentoMesurement::set_has_left_joint3_ang() {
  _has_bits_[0] |= 0x00000100u;
}
inline void StoupentoMesurement::clear_has_left_joint3_ang() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void StoupentoMesurement::clear_left_joint3_ang() {
  left_joint3_ang_ = 0;
  clear_has_left_joint3_ang();
}
inline double StoupentoMesurement::left_joint3_ang() const {
  // @@protoc_insertion_point(field_get:stoupentoPlugin_msgs.msgs.StoupentoMesurement.left_joint3_ang)
  return left_joint3_ang_;
}
inline void StoupentoMesurement::set_left_joint3_ang(double value) {
  set_has_left_joint3_ang();
  left_joint3_ang_ = value;
  // @@protoc_insertion_point(field_set:stoupentoPlugin_msgs.msgs.StoupentoMesurement.left_joint3_ang)
}

// required double left_joint4_ang = 10;
inline bool StoupentoMesurement::has_left_joint4_ang() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void StoupentoMesurement::set_has_left_joint4_ang() {
  _has_bits_[0] |= 0x00000200u;
}
inline void StoupentoMesurement::clear_has_left_joint4_ang() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void StoupentoMesurement::clear_left_joint4_ang() {
  left_joint4_ang_ = 0;
  clear_has_left_joint4_ang();
}
inline double StoupentoMesurement::left_joint4_ang() const {
  // @@protoc_insertion_point(field_get:stoupentoPlugin_msgs.msgs.StoupentoMesurement.left_joint4_ang)
  return left_joint4_ang_;
}
inline void StoupentoMesurement::set_left_joint4_ang(double value) {
  set_has_left_joint4_ang();
  left_joint4_ang_ = value;
  // @@protoc_insertion_point(field_set:stoupentoPlugin_msgs.msgs.StoupentoMesurement.left_joint4_ang)
}

// required double left_wheel_torque = 11;
inline bool StoupentoMesurement::has_left_wheel_torque() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void StoupentoMesurement::set_has_left_wheel_torque() {
  _has_bits_[0] |= 0x00000400u;
}
inline void StoupentoMesurement::clear_has_left_wheel_torque() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void StoupentoMesurement::clear_left_wheel_torque() {
  left_wheel_torque_ = 0;
  clear_has_left_wheel_torque();
}
inline double StoupentoMesurement::left_wheel_torque() const {
  // @@protoc_insertion_point(field_get:stoupentoPlugin_msgs.msgs.StoupentoMesurement.left_wheel_torque)
  return left_wheel_torque_;
}
inline void StoupentoMesurement::set_left_wheel_torque(double value) {
  set_has_left_wheel_torque();
  left_wheel_torque_ = value;
  // @@protoc_insertion_point(field_set:stoupentoPlugin_msgs.msgs.StoupentoMesurement.left_wheel_torque)
}

// required double left_body_torque = 12;
inline bool StoupentoMesurement::has_left_body_torque() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void StoupentoMesurement::set_has_left_body_torque() {
  _has_bits_[0] |= 0x00000800u;
}
inline void StoupentoMesurement::clear_has_left_body_torque() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void StoupentoMesurement::clear_left_body_torque() {
  left_body_torque_ = 0;
  clear_has_left_body_torque();
}
inline double StoupentoMesurement::left_body_torque() const {
  // @@protoc_insertion_point(field_get:stoupentoPlugin_msgs.msgs.StoupentoMesurement.left_body_torque)
  return left_body_torque_;
}
inline void StoupentoMesurement::set_left_body_torque(double value) {
  set_has_left_body_torque();
  left_body_torque_ = value;
  // @@protoc_insertion_point(field_set:stoupentoPlugin_msgs.msgs.StoupentoMesurement.left_body_torque)
}

// required double right_wheel_vel = 13;
inline bool StoupentoMesurement::has_right_wheel_vel() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void StoupentoMesurement::set_has_right_wheel_vel() {
  _has_bits_[0] |= 0x00001000u;
}
inline void StoupentoMesurement::clear_has_right_wheel_vel() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void StoupentoMesurement::clear_right_wheel_vel() {
  right_wheel_vel_ = 0;
  clear_has_right_wheel_vel();
}
inline double StoupentoMesurement::right_wheel_vel() const {
  // @@protoc_insertion_point(field_get:stoupentoPlugin_msgs.msgs.StoupentoMesurement.right_wheel_vel)
  return right_wheel_vel_;
}
inline void StoupentoMesurement::set_right_wheel_vel(double value) {
  set_has_right_wheel_vel();
  right_wheel_vel_ = value;
  // @@protoc_insertion_point(field_set:stoupentoPlugin_msgs.msgs.StoupentoMesurement.right_wheel_vel)
}

// required double right_joint1_vel = 14;
inline bool StoupentoMesurement::has_right_joint1_vel() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void StoupentoMesurement::set_has_right_joint1_vel() {
  _has_bits_[0] |= 0x00002000u;
}
inline void StoupentoMesurement::clear_has_right_joint1_vel() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void StoupentoMesurement::clear_right_joint1_vel() {
  right_joint1_vel_ = 0;
  clear_has_right_joint1_vel();
}
inline double StoupentoMesurement::right_joint1_vel() const {
  // @@protoc_insertion_point(field_get:stoupentoPlugin_msgs.msgs.StoupentoMesurement.right_joint1_vel)
  return right_joint1_vel_;
}
inline void StoupentoMesurement::set_right_joint1_vel(double value) {
  set_has_right_joint1_vel();
  right_joint1_vel_ = value;
  // @@protoc_insertion_point(field_set:stoupentoPlugin_msgs.msgs.StoupentoMesurement.right_joint1_vel)
}

// required double right_joint2_vel = 15;
inline bool StoupentoMesurement::has_right_joint2_vel() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void StoupentoMesurement::set_has_right_joint2_vel() {
  _has_bits_[0] |= 0x00004000u;
}
inline void StoupentoMesurement::clear_has_right_joint2_vel() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void StoupentoMesurement::clear_right_joint2_vel() {
  right_joint2_vel_ = 0;
  clear_has_right_joint2_vel();
}
inline double StoupentoMesurement::right_joint2_vel() const {
  // @@protoc_insertion_point(field_get:stoupentoPlugin_msgs.msgs.StoupentoMesurement.right_joint2_vel)
  return right_joint2_vel_;
}
inline void StoupentoMesurement::set_right_joint2_vel(double value) {
  set_has_right_joint2_vel();
  right_joint2_vel_ = value;
  // @@protoc_insertion_point(field_set:stoupentoPlugin_msgs.msgs.StoupentoMesurement.right_joint2_vel)
}

// required double right_joint3_vel = 16;
inline bool StoupentoMesurement::has_right_joint3_vel() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void StoupentoMesurement::set_has_right_joint3_vel() {
  _has_bits_[0] |= 0x00008000u;
}
inline void StoupentoMesurement::clear_has_right_joint3_vel() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void StoupentoMesurement::clear_right_joint3_vel() {
  right_joint3_vel_ = 0;
  clear_has_right_joint3_vel();
}
inline double StoupentoMesurement::right_joint3_vel() const {
  // @@protoc_insertion_point(field_get:stoupentoPlugin_msgs.msgs.StoupentoMesurement.right_joint3_vel)
  return right_joint3_vel_;
}
inline void StoupentoMesurement::set_right_joint3_vel(double value) {
  set_has_right_joint3_vel();
  right_joint3_vel_ = value;
  // @@protoc_insertion_point(field_set:stoupentoPlugin_msgs.msgs.StoupentoMesurement.right_joint3_vel)
}

// required double right_joint4_vel = 17;
inline bool StoupentoMesurement::has_right_joint4_vel() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void StoupentoMesurement::set_has_right_joint4_vel() {
  _has_bits_[0] |= 0x00010000u;
}
inline void StoupentoMesurement::clear_has_right_joint4_vel() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void StoupentoMesurement::clear_right_joint4_vel() {
  right_joint4_vel_ = 0;
  clear_has_right_joint4_vel();
}
inline double StoupentoMesurement::right_joint4_vel() const {
  // @@protoc_insertion_point(field_get:stoupentoPlugin_msgs.msgs.StoupentoMesurement.right_joint4_vel)
  return right_joint4_vel_;
}
inline void StoupentoMesurement::set_right_joint4_vel(double value) {
  set_has_right_joint4_vel();
  right_joint4_vel_ = value;
  // @@protoc_insertion_point(field_set:stoupentoPlugin_msgs.msgs.StoupentoMesurement.right_joint4_vel)
}

// required double right_wheel_ang = 18;
inline bool StoupentoMesurement::has_right_wheel_ang() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void StoupentoMesurement::set_has_right_wheel_ang() {
  _has_bits_[0] |= 0x00020000u;
}
inline void StoupentoMesurement::clear_has_right_wheel_ang() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void StoupentoMesurement::clear_right_wheel_ang() {
  right_wheel_ang_ = 0;
  clear_has_right_wheel_ang();
}
inline double StoupentoMesurement::right_wheel_ang() const {
  // @@protoc_insertion_point(field_get:stoupentoPlugin_msgs.msgs.StoupentoMesurement.right_wheel_ang)
  return right_wheel_ang_;
}
inline void StoupentoMesurement::set_right_wheel_ang(double value) {
  set_has_right_wheel_ang();
  right_wheel_ang_ = value;
  // @@protoc_insertion_point(field_set:stoupentoPlugin_msgs.msgs.StoupentoMesurement.right_wheel_ang)
}

// required double right_joint1_ang = 19;
inline bool StoupentoMesurement::has_right_joint1_ang() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void StoupentoMesurement::set_has_right_joint1_ang() {
  _has_bits_[0] |= 0x00040000u;
}
inline void StoupentoMesurement::clear_has_right_joint1_ang() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void StoupentoMesurement::clear_right_joint1_ang() {
  right_joint1_ang_ = 0;
  clear_has_right_joint1_ang();
}
inline double StoupentoMesurement::right_joint1_ang() const {
  // @@protoc_insertion_point(field_get:stoupentoPlugin_msgs.msgs.StoupentoMesurement.right_joint1_ang)
  return right_joint1_ang_;
}
inline void StoupentoMesurement::set_right_joint1_ang(double value) {
  set_has_right_joint1_ang();
  right_joint1_ang_ = value;
  // @@protoc_insertion_point(field_set:stoupentoPlugin_msgs.msgs.StoupentoMesurement.right_joint1_ang)
}

// required double right_joint2_ang = 20;
inline bool StoupentoMesurement::has_right_joint2_ang() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void StoupentoMesurement::set_has_right_joint2_ang() {
  _has_bits_[0] |= 0x00080000u;
}
inline void StoupentoMesurement::clear_has_right_joint2_ang() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void StoupentoMesurement::clear_right_joint2_ang() {
  right_joint2_ang_ = 0;
  clear_has_right_joint2_ang();
}
inline double StoupentoMesurement::right_joint2_ang() const {
  // @@protoc_insertion_point(field_get:stoupentoPlugin_msgs.msgs.StoupentoMesurement.right_joint2_ang)
  return right_joint2_ang_;
}
inline void StoupentoMesurement::set_right_joint2_ang(double value) {
  set_has_right_joint2_ang();
  right_joint2_ang_ = value;
  // @@protoc_insertion_point(field_set:stoupentoPlugin_msgs.msgs.StoupentoMesurement.right_joint2_ang)
}

// required double right_joint3_ang = 21;
inline bool StoupentoMesurement::has_right_joint3_ang() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void StoupentoMesurement::set_has_right_joint3_ang() {
  _has_bits_[0] |= 0x00100000u;
}
inline void StoupentoMesurement::clear_has_right_joint3_ang() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void StoupentoMesurement::clear_right_joint3_ang() {
  right_joint3_ang_ = 0;
  clear_has_right_joint3_ang();
}
inline double StoupentoMesurement::right_joint3_ang() const {
  // @@protoc_insertion_point(field_get:stoupentoPlugin_msgs.msgs.StoupentoMesurement.right_joint3_ang)
  return right_joint3_ang_;
}
inline void StoupentoMesurement::set_right_joint3_ang(double value) {
  set_has_right_joint3_ang();
  right_joint3_ang_ = value;
  // @@protoc_insertion_point(field_set:stoupentoPlugin_msgs.msgs.StoupentoMesurement.right_joint3_ang)
}

// required double right_joint4_ang = 22;
inline bool StoupentoMesurement::has_right_joint4_ang() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void StoupentoMesurement::set_has_right_joint4_ang() {
  _has_bits_[0] |= 0x00200000u;
}
inline void StoupentoMesurement::clear_has_right_joint4_ang() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void StoupentoMesurement::clear_right_joint4_ang() {
  right_joint4_ang_ = 0;
  clear_has_right_joint4_ang();
}
inline double StoupentoMesurement::right_joint4_ang() const {
  // @@protoc_insertion_point(field_get:stoupentoPlugin_msgs.msgs.StoupentoMesurement.right_joint4_ang)
  return right_joint4_ang_;
}
inline void StoupentoMesurement::set_right_joint4_ang(double value) {
  set_has_right_joint4_ang();
  right_joint4_ang_ = value;
  // @@protoc_insertion_point(field_set:stoupentoPlugin_msgs.msgs.StoupentoMesurement.right_joint4_ang)
}

// required double right_wheel_torque = 23;
inline bool StoupentoMesurement::has_right_wheel_torque() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void StoupentoMesurement::set_has_right_wheel_torque() {
  _has_bits_[0] |= 0x00400000u;
}
inline void StoupentoMesurement::clear_has_right_wheel_torque() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void StoupentoMesurement::clear_right_wheel_torque() {
  right_wheel_torque_ = 0;
  clear_has_right_wheel_torque();
}
inline double StoupentoMesurement::right_wheel_torque() const {
  // @@protoc_insertion_point(field_get:stoupentoPlugin_msgs.msgs.StoupentoMesurement.right_wheel_torque)
  return right_wheel_torque_;
}
inline void StoupentoMesurement::set_right_wheel_torque(double value) {
  set_has_right_wheel_torque();
  right_wheel_torque_ = value;
  // @@protoc_insertion_point(field_set:stoupentoPlugin_msgs.msgs.StoupentoMesurement.right_wheel_torque)
}

// required double right_body_torque = 24;
inline bool StoupentoMesurement::has_right_body_torque() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void StoupentoMesurement::set_has_right_body_torque() {
  _has_bits_[0] |= 0x00800000u;
}
inline void StoupentoMesurement::clear_has_right_body_torque() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void StoupentoMesurement::clear_right_body_torque() {
  right_body_torque_ = 0;
  clear_has_right_body_torque();
}
inline double StoupentoMesurement::right_body_torque() const {
  // @@protoc_insertion_point(field_get:stoupentoPlugin_msgs.msgs.StoupentoMesurement.right_body_torque)
  return right_body_torque_;
}
inline void StoupentoMesurement::set_right_body_torque(double value) {
  set_has_right_body_torque();
  right_body_torque_ = value;
  // @@protoc_insertion_point(field_set:stoupentoPlugin_msgs.msgs.StoupentoMesurement.right_body_torque)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace stoupentoPlugin_msgs

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_stoupento_5fmesurement_2eproto
