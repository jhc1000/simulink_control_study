function SWPtimer(~, ~, self, handles)
    t = ros2time;
    
    % Update the pose message values
    if isvalid(handles.swpPub)
        handles.swpPubmsg.header.frame_id = 'com_move';
        handles.swpPubmsg.header.stamp = t;
        handles.swpPubmsg.pose.position.x = self.base_movement(1);
        handles.swpPubmsg.pose.position.y = self.base_movement(2);
        handles.swpPubmsg.pose.position.z = self.base_movement(3);
    
        % Publish the scan and pose messages
        send(handles.swpPub,handles.swpPubmsg);
    end

    if isvalid(handles.swpolytopePub)
        handles.swpolytopePubmsg.header.frame_id = 'odom';
        handles.swpolytopePubmsg.header.stamp = t;
        for i = 1:width(self.com_position_lp_results)
            handles.swpolytopePubmsg.polygon.points(i).x = single(self.com_position_lp_results(1,i));
            handles.swpolytopePubmsg.polygon.points(i).y = single(self.com_position_lp_results(2,i));
            handles.swpolytopePubmsg.polygon.points(i).z = single(self.com_position_lp_results(3,i));
        end
    
        % Publish the scan and pose messages
        send(handles.swpolytopePub,handles.swpolytopePubmsg);
    end
end